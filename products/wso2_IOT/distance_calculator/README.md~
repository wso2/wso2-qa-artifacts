This artifact (agent folder) consists a python code which can detect sensor data from a raspbery pi and push the sesnsor value to IoT Server using MQTT. In order to configure it with IoT you need to follow the below steps.


### Required Hardware
	Raspberry pi
	HC-SR04 Module
	Resistors: 330Ω and 470Ω
	Jumper wires

### Steps

- Configure the raspbery pi as per the below sketch using the above hardware.


- Download IoT 1.0.0 server and create a device archetype using the maven archetype shipped OOB
- Navigate to Agent code section in the archetype -> feature/src/main/resources/agent
- Replace the agent folder with the provided agent folder


### Tips to troubleshoot

- The agent code consists a class named agent.py this is where the distance calculation method is implemented - getSensorValue():
- If the sensor values are failing to retrive when the raspberry pi is turned on the first time, try restarting the raspbery pi. If it keeps failing check if the GPIO pins that you configured are correct. e.g - GPIO_TRIGGER = 23,GPIO_ECHO = 24 found in agent.py class
- You can read more from https://tutorials-raspberrypi.com/raspberry-pi-ultrasonic-sensor-hc-sr04/ to get an idea about the implementation of the python code.
